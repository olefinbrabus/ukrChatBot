from aiogram import F, Router
from aiogram.types import Message, URLInputFile
from aiogram.filters import Command

import views.keyboard
import views.text
import datetime

from controller.main_controller import MainController

router = Router()
data_category = None


@router.message(Command("start"))
async def start_handler(msg: Message):
    await msg.answer(views.text.greet.format(
        name=msg.from_user.full_name),
        reply_markup=views.keyboard.main)


@router.message(F.text == "–ú–µ–Ω—é")
@router.message(F.text == "–º–µ–Ω—é")
@router.message(F.text == "–î–æ –º–µ–Ω—é")
async def menu_handler(msg: Message):
    await msg.answer(
        views.text.menu,
        reply_markup=views.keyboard.main)


@router.message(F.text == "üîé –î–æ–ø–æ–º–æ–≥–∞")
async def help_handler(msg: Message):
    await msg.answer(views.text.help_bot,
                     reply_markup=views.keyboard.main)


@router.message(F.text == "üìù –ü–æ—à—É–∫ –ø—Ä–∞–≤–∏–ª–∞")
async def categories_handler(msg: Message):
    await msg.answer("–í–∏–±–µ—Ä—ñ—Ç—å –∫–∞—Ç–µ–≥–æ—Ä—ñ—é",
                     reply_markup=views.keyboard.categories)


@router.message(F.text == "üóìÔ∏è –°–ª–æ–≤–æ—Å–ø–æ–ª—É—á–µ–Ω–Ω—è/—Å–ª–æ–≤–æ –¥–Ω—è")
async def word_of_day_handler(msg: Message):
    controller = MainController()
    index = (datetime.datetime.now().day * 2
             // datetime.datetime.now().month)
    indexed_data = controller.get_examples
    await show_data(msg, indexed_data, index)


@router.message()
async def categories_contains_handler(msg: Message):
    global data_category
    category = msg.text

    if category.isdigit() and data_category is not None:
        i = int(category) - 1  # index -1 because the array starts from zero
        await show_data(msg, data_category, i)

    elif category in MainController().get_categories:
        number = "–ù–∞–ø–∏—à—ñ—Ç—å —Å–ª–æ–≤–æ—Å–ø–æ–ª—É—á–µ–Ω–Ω—è –ø–æ –Ω–æ–º–µ—Ä—É üëá"

        data = {"category_name": category}
        data_category = MainController().get_filter_examples(data)

        for data in data_category:
            number += f"\n {data["id"]+1} - {data["title"]}"
        await msg.answer(number, reply_markup=views.keyboard.main)

    else:
        await msg.answer(
            text="–ü–æ–º–∏–ª–∫–∞, —Ç–∞–∫–æ—ó –∫–æ–º–∞–Ω–¥–∏ –Ω–µ —ñ—Å–Ω—É—î, —Å–ø—Ä–æ–±—É–π—Ç–µ —ñ–Ω—à—É.",
            reply_markup=views.keyboard.main
        )


async def show_data(msg: Message, data: list, index: int):
    try:
        if index == -1:
            raise IndexError

        data = data[index]
        image = URLInputFile(data["image"])

        await msg.answer_photo(
            photo=image,
            caption=f"{data["title"]}\n\n"
                    f"{data["category_name"]}\n\n"
                    f"{data["content"]}\n\n"
                    f"{data["url"]}",
            disable_web_page_preview=True
        )
        if msg.text != "üóìÔ∏è –°–ª–æ–≤–æ—Å–ø–æ–ª—É—á–µ–Ω–Ω—è/—Å–ª–æ–≤–æ –¥–Ω—è":
            await msg.answer("–ù–∞–ø–∏—à–∏—Ç—å –Ω–æ–º–µ—Ä —è–∫—ñ–π –≤–∞—Å —Ü—ñ–∫–∞–≤–∏—Ç—å\n"
                             "–∞–±–æ –≤–∏–π–¥—ñ—Ç—å –¥–æ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó —á–∏ –º–µ–Ω—é")
    except IndexError:
        await msg.answer("–ü–æ–º–∏–ª–∫–∞. –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π –Ω–æ–º–µ—Ä. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.")
